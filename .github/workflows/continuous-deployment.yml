name: Continuous Integration/Deployment to Kubernetes on GCP using GitHub Actions
on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10.14 (if needed for your project)
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.14  # Adjust based on your requirements

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Authenticate Docker to Google Container Registry
        run: gcloud auth configure-docker gcr.io

      - name: Extract dynamic image tag from commit message (configurable)
        id: extract_tag
        run: |
          commit_message=$(git log -1 --pretty=%B)
          tag=$(echo "$commit_message" | grep -Eo 'image_tag:\K \w+')
          if [[ -z "$tag" ]]; then
            echo "Warning: No matching tag found in commit message. Using default tag 'latest'."
            tag="latest"
          fi
          echo "::set-output name=tag::$tag"

      - name: Modify deployment.yaml with new image tag
        run: |
          old_tag=$(grep -oP 'image: gcr.io/deep-learning-421017/skin-cancer-prediction:\K\w+' kubernetes/deployment.yaml)
          new_tag="${{ steps.extract_tag.outputs.tag }}"
          sed -i "s|image: gcr.io/deep-learning-421017/skin-cancer-prediction:${old_tag}|image: gcr.io/deep-learning-421017/skin-cancer-prediction:${new_tag}|g" kubernetes/deployment.yaml

      - name: Build Docker image with dynamic tag
        run: |
          docker build -t "gcr.io/deep-learning-421017/skin-cancer-prediction:${{ steps.extract_tag.outputs.tag }}" .

      - name: Push Docker image
        run: docker push "gcr.io/deep-learning-421017/skin-cancer-prediction:${{ steps.extract_tag.outputs.tag }}"

      - name: Deploy to Kubernetes
        run: |
          gcloud container clusters get-credentials skin-cancer-prediction-cluster --zone europe-west1-b --project deep-learning-421017
          kubectl apply -f kubernetes/deployment.yaml

      - name: Check deployment status
        run: kubectl rollout status deployment/skin-cancer-prediction
